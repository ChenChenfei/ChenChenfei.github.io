---
layout: post
title: 2021-11-03-基于NB-IOT的物联网终端（服务器端）
tags: STM32单片机
date:   2021-11-03 02:47:50
categories: [STM32单片机] 
---

学校的课设任务：要求使用谷雨的STM32L426以及NB101模块完成一个物联网终端，具体题目为实现一个基于NB-IOT的温湿度检测及上传系统，采用UDP或COAP协议。

想要开发，先查文档，好在谷雨有文档中心可以看到关于NB101的各种资料。板子的资料则在百度云中。
谷雨文档中心：http://doc.iotxx.com/
STM32L426的相关资料：[提取码：q8wr](https://pan.baidu.com/s/14r6AqK9hrOc9aD7GnB8mSA )

目录如下：
[toc]

## 开发套件介绍
##### NB101模块
NB101是谷雨物联网研发的基于移远NB模组BC95的NB核心板，也可称作NB最小系统，2.54间距单排针，引出常用信号，即插即用。
主要注意天线的安装和物联网卡的插拔，进行插卡时要注意：**物联网卡的缺口朝外，否则将会出现无法进行调试的情况**

##### STM32L426
见百度云盘

##### Jlink仿真器
见百度云盘

## NB101模块的调试
在使用谷雨的开发板进行调试时，注意端口使用CH340，开发板上的SW3拨到USB处，让NB101模块通过USB与电脑直连进行调试。
### 基本调试
在NB101模块上插入SIM卡后，将开发板通过USB连接到电脑，安装好CH340驱动之后，打开串口调试助手，选择对应的端口，波特率选择9600，输入AT,会收到返回信息OK，则表明NB模块基本正常。
  ```
#发送指令
AT
#模块返回
OK
```
### 联网调试
 ##### 查询模块功能状态

  ```
#发送指令
AT+CFUN?
#模块返回
+CFUN:0
```
+CFUN:0 表示模块功能未打开，若返回：+CFUN:1 则表示射频已打开。
类似查看手机是否处于处于飞行或关机状态。0表示模块处于最低功能状态，功耗很小，可用的指令和功能也很少。
##### 开启模块功能
```
#发送指令
AT+CFUN=1
```
#大约两三秒后，模块返回OK
此时表示模块功能已打开，可以继续后续指令。注意，CFUN指令未返回前请勿执行其他指令。

**注意，若该指令返回错误ERROR，表示没有检测到SIM卡，多数是因为SIM卡未插入或者插反。NB200使用的是Micro类型的卡槽，SIM卡插入时，注意卡缺口朝外。**

##### 查询网络是否激活
该功能类似手机上的打开或关闭4G网络功能，网络激活后后方可网络通信。
发送指令
```
#发送指令
AT+CGATT?
#模块返回
+CGATT:1
OK
```
参数：
0：表示网络未激活，
1：表示网络已激活。
##### 激活网络
打开模块的网络功能，为后面的socket网络通信做准备
发送指令：
```
#发送指令
AT+CGATT=1
#模块返回
OK
```
##### 查询网络是否已注册
```
#发送指令
AT+CEREG?
#模块返回
+CEREG:0,1
OK
```
返回格式为：+CEREG:(n,stat)
参数  |  说明
------------- | -------------
n    | 	该命令通知设置。0：表示网络注册状态变化时，不会主动发送+CEREG通知，用户发送查询命令时才会返回。表示网络注册状态变化时，模块会主动下发+CEREG通知。
stat | 网络注册状态  0：表示模块未注册到网络 1：表示模块已注册到网络   2：表示正在注册网络，请等待注册完成。

**按照上述流程操作好之后，等待CEREG返回0，1或者1，1，表明模块已经入网成功，调试结束**

### 服务器端的搭建
由于需要将传感器的数据上传的云端，所以需要在云端有一台服务器来进行处理，服务器的~~获取~~白嫖方式在这里就不说明了，不管是ali还是tx都有可以白嫖的方法，如果是学生的话，通过高校计划也可以搞到
这次课设我的思路是采用COAP协议来实现，COAP协议是在UDP协议的基础上增加了应用层协议，在实际使用COAP协议进行上传的过程中，发现NB模块报错误码ERR0R:513 经过查询可知，错误码信息为设备未注册。
因此在使用COAP协议的时候需要在云端的物联网网关上进行注册，一般来说，这个时候都需要找大公司搭建好的平台进行使用，直接注册即可，比如像华为的互联网平台或者谷雨自己的物联网平台，不过我们老师这次让我们自己去用服务器实现这一系列操作。（难顶）

***如果使用UDP协议来进行的话，可能就没有这样的苦恼了，直接在云端安装一个网路调试助手进行数据的接收就可以了***

言归正传，使用COAP协议的好处也是有的，本文也是探讨基于COAP协议的物联网网关的搭建，如果想要自己去做一个这样的网关非常难，但是有大佬提供了完整的解决方案，链接如下：
https://blog.csdn.net/a1668659995/article/details/78742521/
大佬使用Linux系统进行安装的，但是uenbiot本身也是有Windows安装包的，可以自行尝试。

在搭建好私人COAP网关后，如果发现数据发送不上去，首先检查一下自己服务器的安全组是不是没有放行8080端口，建议在“一键放行”的基础上增加8080和5683两个端口的放行。